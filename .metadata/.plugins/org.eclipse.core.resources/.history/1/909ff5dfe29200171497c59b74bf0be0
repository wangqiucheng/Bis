package com.bisa.hkshop.wqc.controller;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.bisa.hkshop.model.Cart;
import com.bisa.hkshop.model.Commodity;
import com.bisa.hkshop.model.Product;
import com.bisa.hkshop.wqc.basic.dao.StringUtil;
import com.bisa.hkshop.wqc.service.ICommodityService;
import com.mysql.fabric.xmlrpc.base.Array;

@Controller

public class CartController {
	@Autowired
	private ICommodityService ICommodityService;

	@RequestMapping(value = "/Cart", method = RequestMethod.POST)
	public String requestReport(HttpServletRequest request,Model model){
		String shop_number=request.getParameter("shop_number");
		String shop_num=request.getParameter("shop_num");
		String userId=request.getParameter("userId");
		String package_content=request.getParameter("package_content");
		String serviceId=request.getParameter("serviceId");
		//System.out.println("=====s"+shop_number);
		String serviceNum=request.getParameter("serviceNum");
		//获得主商品的信息
		Commodity com=ICommodityService.getcommodity(shop_number);
		double shop_price=com.getSelling_price();
		Cart cart=new Cart();
		cart.setShop_number(shop_number);
		cart.setUsername(userId);
		cart.setNumber(Double.parseDouble(shop_num));
		cart.setPrice(shop_price);
		cart.setTitle(com.getTitle());
		//计算商品总价
		cart.setTotal(Double.parseDouble(shop_num)*shop_price);
		List<Cart> list=new ArrayList<Cart>();
		list.add(cart);
		Iterator it = list.iterator();
		//这里是判断平安钟服务是否存在,如果存在就把他写进购物车里
		while(it.hasNext()){
			if(StringUtil.isNotEmpty(serviceId)) {
				Commodity comm=ICommodityService.getcommodity(serviceId);
				double shop_price1=com.getSelling_price();
				Cart csCart=null;
				csCart.setShop_number(comm.getShop_number());
				csCart.setUsername(userId);
				csCart.setNumber(Double.parseDouble(serviceNum));
				csCart.setPrice(shop_price1);
				csCart.setTotal(shop_price1*Double.parseDouble(serviceNum));
				csCart.setTitle(comm.getTitle());
				list.add(csCart);
			}	
		}
		//这里是判断套餐的内容的
		String[] productId=package_content.split(",");
		for(int i=0;i<productId.length;i++) {
			String pro=productId[i];
			Commodity cdity=ICommodityService.getcommodity(pro);
			Cart cart2=null;
			cart2.setShop_number(cdity.getShop_number());
			cart2.setUsername(userId);
			String s=String.valueOf(cdity.getNum());
			cart2.setNumber(Double.parseDouble(s));
			cart2.setPrice(cdity.getSelling_price());
			cart2.setTotal(Double.parseDouble(s)*cdity.getSelling_price());
			cart2.setTitle(cdity.getTitle());
			list.add(cart2);
			
		}
		
		model.addAttribute("list", list);
		return "shopping/cart";
	}
	
}
